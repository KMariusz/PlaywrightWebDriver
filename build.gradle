plugins {
    id 'java'
    id 'maven-publish'
}

ext {
    // Project version
    set('projectVersion', '0.0.1')

    // Dependency versions
    set('lombokVersion', '1.18.38')
    set('seleniumVersion', '4.10.0')
    set('playwrightVersion', '1.52.0')
    set('junitJupiterVersion', '5.9.2')
}

group = 'io.github.kmariusz.playwrightwebdriver'
version = project.findProperty("releaseVersion") ?: project.ext.projectVersion

repositories {
    mavenCentral()
}

dependencies {
    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    // Selenium
    implementation "org.seleniumhq.selenium:selenium-api:${seleniumVersion}"
    implementation "org.seleniumhq.selenium:selenium-remote-driver:${seleniumVersion}"
    implementation "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"
    
    // Playwright
    implementation "com.microsoft.playwright:playwright:${playwrightVersion}"
    
    // Test Dependencies
    testImplementation platform("org.junit:junit-bom:${junitJupiterVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.platform:junit-platform-suite-engine'
}

test {
    useJUnitPlatform {
        def tags = project.findProperty("tags") ?: "none"
        includeTags tags.split(",")
    }
}

// Publishing configuration
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'io.github.kmariusz.playwrightwebdriver'
            artifactId = 'playwright-webdriver'
            version = project.ext.projectVersion
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/KMariusz/PlaywrightWebDriver")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name = "MavenCentral"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}
